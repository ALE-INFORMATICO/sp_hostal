/***********************************************************************************************************************
		                                                   FUNCIÃ“N
***********************************************************************************************************************/

-- FUNCION QUE RECUPERA TRAZA DE ERROR

CREATE OR REPLACE FUNCTION FN_GET_GLOSA_ERROR RETURN VARCHAR2
AS

/***********************************************************************************************************************
   NAME:    FN_GET_GLOSA_ERROR
   PURPOSE: Funcion que retorna glosa de error, incluye stacktrace con nombre del SP y linea donde se produce el error

   REVISIONS:
   Ver          Date           Author                       Description
   ---------    ----------     -------------------          -------------------------------------------------------------
   0.1    		17/05/2020     AUTOR DE LA FUNCION          1. Funcion que retorna detalles del error ocurrido

************************************************************************************************************************/

LV_BACKTRACE VARCHAR2(4000) := DBMS_UTILITY.format_error_backtrace;
LV_MENSAJE VARCHAR2(4000) := '';

BEGIN

    LV_MENSAJE := CONCAT(LV_BACKTRACE, SUBSTR(SQLERRM, 1, 255));

    RETURN SUBSTR(LV_MENSAJE, 1, 4000);

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END FN_GET_GLOSA_ERROR;



/***********************************************************************************************************************
		                                                   SP EMPRESA
***********************************************************************************************************************/


/************************************
		     CREATE                                            
***********************************/


create or replace PROCEDURE SP_CREA_EMPRESA(
    IN_NOMBRE IN VARCHAR2,
    IN_RUT IN VARCHAR2,
    IN_DIRECCION IN VARCHAR2,
    IN_TELEFONO IN NUMBER,
    IN_MAIL IN VARCHAR2,
    IN_USERNAME IN VARCHAR2,
    IN_PASSWORD IN VARCHAR2,
    IN_PERIL IN NUMBER,
    IN_HOTEL IN NUMBER,    
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER,
	OUT_ID_USUARIO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_EMPRESA
   PURPOSE		CREA UNA EMPRESA

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		17/05/2020     MARCELA VERGARA       	1. CREA UN REGISTRO EN LA TABLA EMPRESA
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_EMPRESA ejecutado exitosamente';

    
	INSERT INTO HOSTAL.LOGIN(
		ID_USUARIO,
		USERNAME,
		PASSWORD,
		ID_PERFIL
	)
	 VALUES (
		HOSTAL.LOGIN_SEQ.NEXTVAL,
		IN_USERNAME,
		IN_PASSWORD,
		IN_PERIL
		
	 ) RETURNING ID_USUARIO INTO OUT_ID_USUARIO;
	
	INSERT INTO HOSTAL.EMPRESA(
        ID_EMPRESA,
        NOMBRE,
        RUT,
        DIRECCION,
        TELEFONO,
        MAIL,
        ID_USUARIO,
        ID_HOTEL
   )
    VALUES (
      HOSTAL.EMPRESA_SEQ.NEXTVAL,
      IN_NOMBRE,
      IN_RUT,
      IN_DIRECCION,
      IN_TELEFONO,
      IN_MAIL,
      OUT_ID_USUARIO,
      IN_HOTEL
    ) RETURNING ID_EMPRESA INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_EMPRESA;


/************************************
		     READ                                            
***********************************/

-- PROCEDIMIENTO QUE LEE DATOS

CREATE OR REPLACE PROCEDURE SP_LEE_EMPRESA(
  IN_EMPRESA IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPRESA
   PURPOSE		LEE DATOS EMPRESA

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		17/05/2020     MARCELA VERGARA          1. LEER INFO EMPRESA
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPRESA ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            E.NOMBRE,
            E.RUT,
            E.DIRECCION,
            E.TELEFONO,
            E.MAIL,
            U.USERNAME,
			H.NOMBRE AS HOTEL
        FROM HOSTAL.EMPRESA E
		JOIN LOGIN U ON (E.ID_USUARIO = U.ID_USUARIO)
		JOIN HOTEL H ON (E.ID_HOTEL = H.ID_HOTEL)
		WHERE ID_EMPRESA = IN_EMPRESA;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPRESA;
